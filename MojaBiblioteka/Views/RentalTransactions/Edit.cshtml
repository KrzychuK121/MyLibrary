@using MojaBiblioteka.Models.ViewModels.Connector;
@model MojaBiblioteka.Models.Entities.Connector.RentalTransaction

@{
    ViewData["Title"] = "Edytuj transakcję wypożyczenia";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isAdminOrEmployee = User.IsInRole("Admin") || User.IsInRole("Employee");
    var counterAuthors = 1;
}

<h1>Edit</h1>

<h4>Transakcja wypożyczenia</h4>
<hr />
<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Book)
    </dt>
    <dd class="col-sm-10">
        <b>@Html.DisplayNameFor(model => model.Book.Isbn):</b> @Html.DisplayFor(model => model.Book.Isbn)<br />
        <b>@Html.DisplayNameFor(model => model.Book.Title):</b> @Html.DisplayFor(model => model.Book.Title)<br />
        <b>@Html.DisplayNameFor(model => model.Book.BookAuthor):</b>
        @if (Model.Book.BookAuthor is null || Model.Book.BookAuthor.Count() == 0)
        {
            @:Brak
        }

        @foreach (var bAuthor in Model.Book.BookAuthor)
        {

            string? dateToDisplay = bAuthor.Author.DateOfBirth is null ?
            "" :
            ", " + bAuthor.Author.DateOfBirth.ToString().Split(' ')[0];
            <span class="text-capitalize">
                @Html.Encode(
            bAuthor.Author.FirstName.FirstName + " " +
            bAuthor.Author.Surname.Surname +
            dateToDisplay
            )
            </span>

            @Html.Raw(counterAuthors++ == Model.Book.BookAuthor.Count() ? "" : ", ")
        }
        <br />
        <b>@Html.DisplayNameFor(model => model.Book.Publisher):</b> @Html.DisplayFor(model => model.Book.Publisher.Name)<br />
        <b>@Html.DisplayNameFor(model => model.Book.BookCategory):</b>
        @{
            // which element in loop
            var counterCategories = 1;

            if (Model.Book.BookCategory is null || Model.Book.BookCategory.Count() == 0)
                @Html.Raw("Brak")
            ;

            foreach (var bCategory in Model.Book.BookCategory)
            {
                @bCategory.Category.Name @(counterCategories == Model.Book.BookCategory.Count() ? "" : ", ")
                ;
                counterCategories++;
            }
        }
        <br />
        <b>@Html.DisplayNameFor(model => model.Book.ReleaseDate):</b> @Html.DisplayFor(model => model.Book.ReleaseDate)<br />
        <b>@Html.DisplayNameFor(model => model.Book.Amount):</b> @Html.DisplayFor(model => model.Book.Amount)<br />
        <!--Koniec książki-->
    </dd>
    @if (isAdminOrEmployee)
    {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class="col-sm-10">
            <p>
                <b>@Html.DisplayNameFor(model => model.UserId):</b> @Model.UserId <br />
                <b>Imię i nazwisko:</b> <span class="text-capitalize">@Model.User.FirstName.FirstName @Model.User.Surname.Surname</span><br />
                <b>Kontakt:</b><br />
                <b>Nr. tel:</b> @Html.Raw(Model.User.PhoneNumber == null ? "brak" : Model.User.PhoneNumber)<br />
                <b>@Html.DisplayNameFor(model => model.User.Email):</b> @Model.User.Email<br />
            </p>
        </dd>
    }
</dl>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" asp-route-userIdPath="@ViewData["userId"]">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="RentalTransactionId" />
            <input type="hidden" asp-for="BookIsbn" />
            <input type="hidden" asp-for="UserId" />
            <div class="form-group">
                <label asp-for="RentalDate" class="control-label"></label>
                <input asp-for="RentalDate" class="form-control" />
                <span asp-validation-for="RentalDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DueDate" class="control-label"></label>
                <input asp-for="DueDate" class="form-control" />
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProlongTermCounter" class="control-label"></label>
                <input asp-for="ProlongTermCounter" class="form-control" />
                <span asp-validation-for="ProlongTermCounter" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control" asp-items="ViewBag.Status"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Zapisz" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @await Html.PartialAsync("_GoBackLink", ViewData["userId"])
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
